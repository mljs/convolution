| Data x Kernel | fft [ops/s] | direct [ops/s] |
| ------------- | --- | ------ |
[marking 0x3b09f1c849a9 <JSFunction FFT (sfi = 0x29f8b5e73cb9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 25/58 (43%), generic ICs: 0/58 (0%)]
[compiling method 0x3b09f1c849a9 <JSFunction FFT (sfi = 0x29f8b5e73cb9)> using TurboFan OSR]
[optimizing 0x3b09f1c849a9 <JSFunction FFT (sfi = 0x29f8b5e73cb9)> - took 0.812, 0.753, 0.019 ms]
[deoptimizing (DEOPT soft): begin 0x3b09f1c849a9 <JSFunction FFT (sfi = 0x29f8b5e73cb9)> (opt #0) @10, FP to SP delta: 208, caller sp: 0x7ffc4f260028]
            ;;; deoptimize at </home/mzasso/git/image-js/fft.js/lib/fft.js:44:18>, Insufficient type feedback for generic named access
  reading input frame FFT => bytecode_offset=398, args=2, height=15; inputs:
      0: 0x3b09f1c849a9 ;  [fp -  16]  0x3b09f1c849a9 <JSFunction FFT (sfi = 0x29f8b5e73cb9)>
      1: 0x0ab1ad30f2a9 ;  [fp +  24]  0x0ab1ad30f2a9 <FFT map = 0x1721da4caaf1>
      2: 0x200000000000 ;  [fp +  16]  8192
      3: 0x3b09f1c849e9 ;  [fp - 152]  0x3b09f1c849e9 <FunctionContext[5]>
      4: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      5: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      6: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      7: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      8: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      9: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     10: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     11: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     12: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     13: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     14: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     15: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     16: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     17: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     18: 0x327eeb6bdfe1 ; rdi 0x327eeb6bdfe1 <JSArray[8192]>
  translating interpreted frame FFT => bytecode_offset=398, height=120
    0x7ffc4f260020: [top + 176] <- 0x0ab1ad30f2a9 <FFT map = 0x1721da4caaf1> ;  stack parameter (input #1)
    0x7ffc4f260018: [top + 168] <- 0x200000000000 <Smi 8192> ;  stack parameter (input #2)
    -------------------------
    0x7ffc4f260010: [top + 160] <- 0x0ee3f6289d53 ;  caller's pc
    0x7ffc4f260008: [top + 152] <- 0x7ffc4f260058 ;  caller's fp
    0x7ffc4f260000: [top + 144] <- 0x3b09f1c849e9 <FunctionContext[5]> ;  context
 (input #0)
    0x7ffc4f25fff8: [top + 136] <- 0x3b09f1c849a9 <JSFunction FFT (sfi = 0x29f8b5e73cb9)> ;  function
 (input #0)
    0x7ffc4f25fff0: [top + 128] <- 0x3e79bd3122c1 <BytecodeArray[419]> ;  bytecode array
    0x7ffc4f25ffe8: [top + 120] <- 0x01c700000000 <Smi 455> ;  bytecode offset
    -------------------------
    0x7ffc4f25ffe0: [top + 112] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #4)
    0x7ffc4f25ffd8: [top + 104] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #5)
    0x7ffc4f25ffd0: [top +  96] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #6)
    0x7ffc4f25ffc8: [top +  88] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #7)
    0x7ffc4f25ffc0: [top +  80] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #8)
    0x7ffc4f25ffb8: [top +  72] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #9)
    0x7ffc4f25ffb0: [top +  64] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #10)
    0x7ffc4f25ffa8: [top +  56] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #11)
    0x7ffc4f25ffa0: [top +  48] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #12)
    0x7ffc4f25ff98: [top +  40] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #13)
    0x7ffc4f25ff90: [top +  32] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #14)
    0x7ffc4f25ff88: [top +  24] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #15)
    0x7ffc4f25ff80: [top +  16] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #16)
    0x7ffc4f25ff78: [top +   8] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #17)
    0x7ffc4f25ff70: [top +   0] <- 0x327eeb6bdfe1 <JSArray[8192]> ;  accumulator (input #0)
[deoptimizing (soft): end 0x3b09f1c849a9 <JSFunction FFT (sfi = 0x29f8b5e73cb9)> @10 => node=398, pc=0x0ee3f628ea00, caller sp=0x7ffc4f260028, took 0.600 ms]
[marking 0x0f277c810581 <JSFunction newArray (sfi = 0x29f8b5e73c61)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[compiling method 0x0f277c810581 <JSFunction newArray (sfi = 0x29f8b5e73c61)> using TurboFan OSR]
[optimizing 0x0f277c810581 <JSFunction newArray (sfi = 0x29f8b5e73c61)> - took 0.138, 0.530, 0.019 ms]
[marking 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)> for optimized recompilation, reason: small function, ICs with typeinfo: 9/10 (90%), generic ICs: 0/10 (0%)]
[compiling method 0x0f277c810581 <JSFunction newArray (sfi = 0x29f8b5e73c61)> using TurboFan]
[optimizing 0x0f277c810581 <JSFunction newArray (sfi = 0x29f8b5e73c61)> - took 0.093, 0.498, 0.015 ms]
[marking 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 21/21 (100%), generic ICs: 0/21 (0%)]
[compiling method 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)> using TurboFan]
[marking 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 100/113 (88%), generic ICs: 0/113 (0%)]
[optimizing 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)> - took 0.141, 0.547, 0.027 ms]
[completed optimizing 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)>]
[compiling method 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> using TurboFan OSR]
[optimizing 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> - took 0.458, 2.291, 0.021 ms]
[compiling method 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)> using TurboFan]
[compiling method 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> using TurboFan]
[optimizing 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> - took 0.621, 3.292, 0.023 ms]
[optimizing 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)> - took 0.255, 1.132, 0.023 ms]
[completed optimizing 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)>]
[deoptimizing (DEOPT eager): begin 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> (opt #6) @12, FP to SP delta: 224, caller sp: 0x7ffc4f260088]
            ;;; deoptimize at </home/mzasso/git/image-js/fft.js/lib/fft.js:238:17> inlined at </home/mzasso/git/image-js/fft.js/lib/fft.js:130:14>, wrong map
  reading input frame _transform4 => bytecode_offset=0, args=1, height=67; inputs:
      0: 0x0f277c803219 ;  [fp -  16]  0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)>
      1: 0x0f277c813999 ;  [fp +  16]  0x0f277c813999 <FFT map = 0x1721da4cac31>
      2: 0x3b09f1c849e9 ;  [fp -  48]  0x3b09f1c849e9 <FunctionContext[5]>
      3: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      4: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      5: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      6: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      7: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      8: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      9: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     10: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     11: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     12: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     13: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     14: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     15: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     16: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     17: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     18: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     19: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     20: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     21: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     22: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     23: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     24: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     25: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     26: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     27: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     28: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     29: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     30: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     31: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     32: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     33: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     34: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     35: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     36: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     37: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     38: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     39: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     40: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     41: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     42: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     43: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     44: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     45: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     46: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     47: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     48: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     49: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     50: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     51: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     52: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     53: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     54: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     55: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     56: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     57: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     58: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     59: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     60: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     61: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     62: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     63: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     64: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     65: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     66: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     67: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     68: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     69: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
  translating interpreted frame _transform4 => bytecode_offset=0, height=536
    0x7ffc4f260080: [top + 584] <- 0x0f277c813999 <FFT map = 0x1721da4cac31> ;  stack parameter (input #1)
    -------------------------
    0x7ffc4f260078: [top + 576] <- 0x0ee3f628e458 ;  caller's pc
    0x7ffc4f260070: [top + 568] <- 0x7ffc4f2600b8 ;  caller's fp
    0x7ffc4f260068: [top + 560] <- 0x3b09f1c849e9 <FunctionContext[5]> ;  context
 (input #0)
    0x7ffc4f260060: [top + 552] <- 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> ;  function
 (input #0)
    0x7ffc4f260058: [top + 544] <- 0x3e79bd3148d1 <BytecodeArray[783]> ;  bytecode array
    0x7ffc4f260050: [top + 536] <- 0x003900000000 <Smi 57> ;  bytecode offset
    -------------------------
    0x7ffc4f260048: [top + 528] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #3)
    0x7ffc4f260040: [top + 520] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #4)
    0x7ffc4f260038: [top + 512] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #5)
    0x7ffc4f260030: [top + 504] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #6)
    0x7ffc4f260028: [top + 496] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #7)
    0x7ffc4f260020: [top + 488] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #8)
    0x7ffc4f260018: [top + 480] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #9)
    0x7ffc4f260010: [top + 472] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #10)
    0x7ffc4f260008: [top + 464] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #11)
    0x7ffc4f260000: [top + 456] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #12)
    0x7ffc4f25fff8: [top + 448] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #13)
    0x7ffc4f25fff0: [top + 440] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #14)
    0x7ffc4f25ffe8: [top + 432] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #15)
    0x7ffc4f25ffe0: [top + 424] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #16)
    0x7ffc4f25ffd8: [top + 416] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #17)
    0x7ffc4f25ffd0: [top + 408] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #18)
    0x7ffc4f25ffc8: [top + 400] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #19)
    0x7ffc4f25ffc0: [top + 392] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #20)
    0x7ffc4f25ffb8: [top + 384] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #21)
    0x7ffc4f25ffb0: [top + 376] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #22)
    0x7ffc4f25ffa8: [top + 368] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #23)
    0x7ffc4f25ffa0: [top + 360] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #24)
    0x7ffc4f25ff98: [top + 352] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #25)
    0x7ffc4f25ff90: [top + 344] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #26)
    0x7ffc4f25ff88: [top + 336] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #27)
    0x7ffc4f25ff80: [top + 328] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #28)
    0x7ffc4f25ff78: [top + 320] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #29)
    0x7ffc4f25ff70: [top + 312] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #30)
    0x7ffc4f25ff68: [top + 304] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #31)
    0x7ffc4f25ff60: [top + 296] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #32)
    0x7ffc4f25ff58: [top + 288] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #33)
    0x7ffc4f25ff50: [top + 280] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #34)
    0x7ffc4f25ff48: [top + 272] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #35)
    0x7ffc4f25ff40: [top + 264] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #36)
    0x7ffc4f25ff38: [top + 256] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #37)
    0x7ffc4f25ff30: [top + 248] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #38)
    0x7ffc4f25ff28: [top + 240] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #39)
    0x7ffc4f25ff20: [top + 232] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #40)
    0x7ffc4f25ff18: [top + 224] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #41)
    0x7ffc4f25ff10: [top + 216] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #42)
    0x7ffc4f25ff08: [top + 208] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #43)
    0x7ffc4f25ff00: [top + 200] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #44)
    0x7ffc4f25fef8: [top + 192] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #45)
    0x7ffc4f25fef0: [top + 184] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #46)
    0x7ffc4f25fee8: [top + 176] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #47)
    0x7ffc4f25fee0: [top + 168] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #48)
    0x7ffc4f25fed8: [top + 160] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #49)
    0x7ffc4f25fed0: [top + 152] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #50)
    0x7ffc4f25fec8: [top + 144] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #51)
    0x7ffc4f25fec0: [top + 136] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #52)
    0x7ffc4f25feb8: [top + 128] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #53)
    0x7ffc4f25feb0: [top + 120] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #54)
    0x7ffc4f25fea8: [top + 112] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #55)
    0x7ffc4f25fea0: [top + 104] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #56)
    0x7ffc4f25fe98: [top +  96] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #57)
    0x7ffc4f25fe90: [top +  88] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #58)
    0x7ffc4f25fe88: [top +  80] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #59)
    0x7ffc4f25fe80: [top +  72] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #60)
    0x7ffc4f25fe78: [top +  64] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #61)
    0x7ffc4f25fe70: [top +  56] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #62)
    0x7ffc4f25fe68: [top +  48] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #63)
    0x7ffc4f25fe60: [top +  40] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #64)
    0x7ffc4f25fe58: [top +  32] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #65)
    0x7ffc4f25fe50: [top +  24] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #66)
    0x7ffc4f25fe48: [top +  16] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #67)
    0x7ffc4f25fe40: [top +   8] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #68)
    0x7ffc4f25fe38: [top +   0] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  accumulator (input #0)
[deoptimizing (eager): end 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> @12 => node=0, pc=0x0ee3f628ea00, caller sp=0x7ffc4f260088, took 2.870 ms]
[deoptimizing (DEOPT eager): begin 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)> (opt #3) @11, FP to SP delta: 80, caller sp: 0x7ffc4f25fe40]
            ;;; deoptimize at </home/mzasso/git/image-js/fft.js/lib/fft.js:238:17>, wrong map
  reading input frame _singleTransform2 => bytecode_offset=0, args=4, height=13; inputs:
      0: 0x0f277c803251 ;  [fp -  16]  0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)>
      1: 0x0f277c813999 ; rax 0x0f277c813999 <FFT map = 0x1721da4cac31>
      2: 0x000000000000 ;  [fp +  32]  0
      3: 0x000000000000 ; rdi 0
      4: 0x200000000000 ; r8 8192
      5: 0x3b09f1c849e9 ;  [fp -  32]  0x3b09f1c849e9 <FunctionContext[5]>
      6: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      7: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      8: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      9: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     10: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     11: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     12: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     13: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     14: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     15: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     16: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     17: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     18: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
  translating interpreted frame _singleTransform2 => bytecode_offset=0, height=104
    0x7ffc4f25fe38: [top + 176] <- 0x0f277c813999 <FFT map = 0x1721da4cac31> ;  stack parameter (input #1)
    0x7ffc4f25fe30: [top + 168] <- 0x000000000000 <Smi 0> ;  stack parameter (input #2)
    0x7ffc4f25fe28: [top + 160] <- 0x000000000000 <Smi 0> ;  stack parameter (input #3)
    0x7ffc4f25fe20: [top + 152] <- 0x200000000000 <Smi 8192> ;  stack parameter (input #4)
    -------------------------
    0x7ffc4f25fe18: [top + 144] <- 0x0ee3f628e458 ;  caller's pc
    0x7ffc4f25fe10: [top + 136] <- 0x7ffc4f260070 ;  caller's fp
    0x7ffc4f25fe08: [top + 128] <- 0x3b09f1c849e9 <FunctionContext[5]> ;  context
 (input #0)
    0x7ffc4f25fe00: [top + 120] <- 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)> ;  function
 (input #0)
    0x7ffc4f25fdf8: [top + 112] <- 0x3e79bd315239 <BytecodeArray[128]> ;  bytecode array
    0x7ffc4f25fdf0: [top + 104] <- 0x003900000000 <Smi 57> ;  bytecode offset
    -------------------------
    0x7ffc4f25fde8: [top +  96] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #6)
    0x7ffc4f25fde0: [top +  88] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #7)
    0x7ffc4f25fdd8: [top +  80] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #8)
    0x7ffc4f25fdd0: [top +  72] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #9)
    0x7ffc4f25fdc8: [top +  64] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #10)
    0x7ffc4f25fdc0: [top +  56] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #11)
    0x7ffc4f25fdb8: [top +  48] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #12)
    0x7ffc4f25fdb0: [top +  40] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #13)
    0x7ffc4f25fda8: [top +  32] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #14)
    0x7ffc4f25fda0: [top +  24] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #15)
    0x7ffc4f25fd98: [top +  16] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #16)
    0x7ffc4f25fd90: [top +   8] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #17)
    0x7ffc4f25fd88: [top +   0] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  accumulator (input #0)
[deoptimizing (eager): end 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)> @11 => node=0, pc=0x0ee3f628ea00, caller sp=0x7ffc4f25fe40, took 0.817 ms]
[marking 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 21/21 (100%), generic ICs: 0/21 (0%)]
[compiling method 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)> using TurboFan]
[optimizing 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)> - took 0.169, 0.567, 0.014 ms]
[completed optimizing 0x0f277c803251 <JSFunction _singleTransform2 (sfi = 0x29f8b5e73fd1)>]
[marking 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 107/113 (94%), generic ICs: 0/113 (0%)]
[compiling method 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> using TurboFan OSR]
[optimizing 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> - took 0.732, 4.225, 0.046 ms]
[marking 0x0f277c80be39 <JSFunction convolve (sfi = 0x29f8b5e707b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 27/46 (58%), generic ICs: 0/46 (0%)]
[compiling method 0x0f277c80be39 <JSFunction convolve (sfi = 0x29f8b5e707b9)> using TurboFan OSR]
[optimizing 0x0f277c80be39 <JSFunction convolve (sfi = 0x29f8b5e707b9)> - took 0.225, 0.711, 0.022 ms]
[deoptimizing (DEOPT soft): begin 0x0f277c80be39 <JSFunction convolve (sfi = 0x29f8b5e707b9)> (opt #9) @15, FP to SP delta: 168, caller sp: 0x7ffc4f2601f8]
            ;;; deoptimize at </home/mzasso/git/mljs/convolution/lib/index.js:146:14>, Insufficient type feedback for generic named access
  reading input frame convolve => bytecode_offset=228, args=2, height=11; inputs:
      0: 0x0f277c80be39 ;  [fp -  16]  0x0f277c80be39 <JSFunction convolve (sfi = 0x29f8b5e707b9)>
      1: 0x0f277c813a51 ; rax 0x0f277c813a51 <FFTConvolution map = 0x1721da4cae61>
      2: 0x0f277c813b81 ;  [fp +  16]  0x0f277c813b81 <JSArray[4096]>
      3: 0x3b09f1c84a21 ;  [fp - 120]  0x3b09f1c84a21 <FunctionContext[15]>
      4: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      5: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      6: 0x3b09f1cf61d9 ;  [fp -  56]  0x3b09f1cf61d9 <JSArray[16384]>
      7: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      8: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
      9: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     10: 0x0f277c813999 ; rbx 0x0f277c813999 <FFT map = 0x1721da4cac31>
     11: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     12: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     13: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
     14: 0x06076fd02f39 ; (literal  1) 0x06076fd02f39 <Odd Oddball: optimized_out>
  translating interpreted frame convolve => bytecode_offset=228, height=88
    0x7ffc4f2601f0: [top + 144] <- 0x0f277c813a51 <FFTConvolution map = 0x1721da4cae61> ;  stack parameter (input #1)
    0x7ffc4f2601e8: [top + 136] <- 0x0f277c813b81 <JSArray[4096]> ;  stack parameter (input #2)
    -------------------------
    0x7ffc4f2601e0: [top + 128] <- 0x0ee3f628e458 ;  caller's pc
    0x7ffc4f2601d8: [top + 120] <- 0x7ffc4f260248 ;  caller's fp
    0x7ffc4f2601d0: [top + 112] <- 0x3b09f1c84a21 <FunctionContext[15]> ;  context
 (input #0)
    0x7ffc4f2601c8: [top + 104] <- 0x0f277c80be39 <JSFunction convolve (sfi = 0x29f8b5e707b9)> ;  function
 (input #0)
    0x7ffc4f2601c0: [top +  96] <- 0x3e79bd318a01 <BytecodeArray[352]> ;  bytecode array
    0x7ffc4f2601b8: [top +  88] <- 0x011d00000000 <Smi 285> ;  bytecode offset
    -------------------------
    0x7ffc4f2601b0: [top +  80] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #4)
    0x7ffc4f2601a8: [top +  72] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #5)
    0x7ffc4f2601a0: [top +  64] <- 0x3b09f1cf61d9 <JSArray[16384]> ;  stack parameter (input #6)
    0x7ffc4f260198: [top +  56] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #7)
    0x7ffc4f260190: [top +  48] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #8)
    0x7ffc4f260188: [top +  40] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #9)
    0x7ffc4f260180: [top +  32] <- 0x0f277c813999 <FFT map = 0x1721da4cac31> ;  stack parameter (input #10)
    0x7ffc4f260178: [top +  24] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #11)
    0x7ffc4f260170: [top +  16] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #12)
    0x7ffc4f260168: [top +   8] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #13)
    0x7ffc4f260160: [top +   0] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  accumulator (input #0)
[deoptimizing (soft): end 0x0f277c80be39 <JSFunction convolve (sfi = 0x29f8b5e707b9)> @15 => node=228, pc=0x0ee3f628ea00, caller sp=0x7ffc4f2601f8, took 0.527 ms]
[compiling method 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> using TurboFan]
[optimizing 0x0f277c803219 <JSFunction _transform4 (sfi = 0x29f8b5e73f79)> - took 0.644, 3.247, 0.026 ms]
[marking 0x0f277c8031e1 <JSFunction inverseTransform (sfi = 0x29f8b5e73f21)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/15 (66%), generic ICs: 0/15 (0%)]
[compiling method 0x0f277c8031e1 <JSFunction inverseTransform (sfi = 0x29f8b5e73f21)> using TurboFan OSR]
[optimizing 0x0f277c8031e1 <JSFunction inverseTransform (sfi = 0x29f8b5e73f21)> - took 0.103, 0.420, 0.014 ms]
[marking 0x0f277c803091 <JSFunction fromComplexArray (sfi = 0x29f8b5e73d11)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/8 (75%), generic ICs: 0/8 (0%)]
[marking 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 17/17 (100%), generic ICs: 0/17 (0%)]
[marking 0x0f277c810501 <JSFunction interpolateInput (sfi = 0x29f8b5e704a1)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[compiling method 0x0f277c810501 <JSFunction interpolateInput (sfi = 0x29f8b5e704a1)> using TurboFan]
[compiling method 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> using TurboFan OSR]
[optimizing 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> - took 0.154, 0.961, 0.022 ms]
[optimizing 0x0f277c810501 <JSFunction interpolateInput (sfi = 0x29f8b5e704a1)> - took 0.075, 0.300, 0.009 ms]
[completed optimizing 0x0f277c810501 <JSFunction interpolateInput (sfi = 0x29f8b5e704a1)>]
| 4096 x 5 | 34 | 500 |
[compiling method 0x3b09f1c849a9 <JSFunction FFT (sfi = 0x29f8b5e73cb9)> using TurboFan]
[optimizing 0x3b09f1c849a9 <JSFunction FFT (sfi = 0x29f8b5e73cb9)> - took 0.412, 2.275, 0.050 ms]
[deoptimizing (DEOPT eager): begin 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)> (opt #5) @3, FP to SP delta: 72, caller sp: 0x7ffc4f260000]
            ;;; deoptimize at </home/mzasso/git/image-js/fft.js/lib/fft.js:63:29>, wrong map
  reading input frame toComplexArray => bytecode_offset=20, args=3, height=5; inputs:
      0: 0x0f277c803101 ;  [fp -  16]  0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)>
      1: 0x020713d6f3c1 ; rbx 0x020713d6f3c1 <FFT map = 0x1721da4cac31>
      2: 0x030d895b12e9 ;  [fp +  24]  0x030d895b12e9 <JSArray[8192]>
      3: 0x06076fd025b1 ; rax 0x06076fd025b1 <undefined>
      4: 0x3b09f1c849e9 ;  [fp -  40]  0x3b09f1c849e9 <FunctionContext[5]>
      5: 0x000000000000 ; (literal  4) 0
      6: 0x030d895eb0c1 ; rdx 0x030d895eb0c1 <JSArray[16384]>
      7: 0x06076fd02f39 ; (literal  3) 0x06076fd02f39 <Odd Oddball: optimized_out>
      8: 0x06076fd02f39 ; (literal  3) 0x06076fd02f39 <Odd Oddball: optimized_out>
      9: 0x06076fd02f39 ; (literal  3) 0x06076fd02f39 <Odd Oddball: optimized_out>
  translating interpreted frame toComplexArray => bytecode_offset=20, height=40
    0x7ffc4f25fff8: [top + 104] <- 0x020713d6f3c1 <FFT map = 0x1721da4cac31> ;  stack parameter (input #1)
    0x7ffc4f25fff0: [top +  96] <- 0x030d895b12e9 <JSArray[8192]> ;  stack parameter (input #2)
    0x7ffc4f25ffe8: [top +  88] <- 0x06076fd025b1 <undefined> ;  stack parameter (input #3)
    -------------------------
    0x7ffc4f25ffe0: [top +  80] <- 0x0ee3f62876a6 ;  caller's pc
    0x7ffc4f25ffd8: [top +  72] <- 0x7ffc4f260020 ;  caller's fp
    0x7ffc4f25ffd0: [top +  64] <- 0x3b09f1c849e9 <FunctionContext[5]> ;  context
 (input #0)
    0x7ffc4f25ffc8: [top +  56] <- 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)> ;  function
 (input #0)
    0x7ffc4f25ffc0: [top +  48] <- 0x3e79bd313731 <BytecodeArray[67]> ;  bytecode array
    0x7ffc4f25ffb8: [top +  40] <- 0x004d00000000 <Smi 77> ;  bytecode offset
    -------------------------
    0x7ffc4f25ffb0: [top +  32] <- 0x000000000000 <Smi 0> ;  stack parameter (input #5)
    0x7ffc4f25ffa8: [top +  24] <- 0x030d895eb0c1 <JSArray[16384]> ;  stack parameter (input #6)
    0x7ffc4f25ffa0: [top +  16] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #7)
    0x7ffc4f25ff98: [top +   8] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #8)
    0x7ffc4f25ff90: [top +   0] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  accumulator (input #0)
[deoptimizing (eager): end 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)> @3 => node=20, pc=0x0ee3f628ea00, caller sp=0x7ffc4f260000, took 0.519 ms]
[marking 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)> for optimized recompilation, reason: small function, ICs with typeinfo: 10/10 (100%), generic ICs: 0/10 (0%)]
[compiling method 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)> using TurboFan OSR]
[optimizing 0x0f277c803101 <JSFunction toComplexArray (sfi = 0x29f8b5e73dc1)> - took 0.310, 0.982, 0.044 ms]
[compiling method 0x0f277c80be39 <JSFunction convolve (sfi = 0x29f8b5e707b9)> using TurboFan]
[optimizing 0x0f277c80be39 <JSFunction convolve (sfi = 0x29f8b5e707b9)> - took 1.077, 4.140, 0.036 ms]
[compiling method 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> using TurboFan]
[optimizing 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> - took 0.202, 0.857, 0.019 ms]
[deoptimizing (DEOPT eager): begin 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> (opt #17) @2, FP to SP delta: 104, caller sp: 0x7ffc4f2601a0]
            ;;; deoptimize at </home/mzasso/git/mljs/convolution/lib/index.js:68:21>, wrong map
  reading input frame _convolutionBorder0 => bytecode_offset=4, args=2, height=9; inputs:
      0: 0x0f277c80bea9 ;  [fp -  16]  0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)>
      1: 0x287e4b3024b9 ; rax 0x287e4b3024b9 <DirectConvolution map = 0x1721da4ca691>
      2: 0x287e4b302549 ; rsi 0x287e4b302549 <JSArray[4096]>
      3: 0x3b09f1c84a21 ;  [fp -  64]  0x3b09f1c84a21 <FunctionContext[15]>
      4: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      5: 0 ; rcx 
      6: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      7: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      8: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
      9: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     10: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     11: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
     12: 0x06076fd02f39 ; (literal  2) 0x06076fd02f39 <Odd Oddball: optimized_out>
  translating interpreted frame _convolutionBorder0 => bytecode_offset=4, height=72
    0x7ffc4f260198: [top + 128] <- 0x287e4b3024b9 <DirectConvolution map = 0x1721da4ca691> ;  stack parameter (input #1)
    0x7ffc4f260190: [top + 120] <- 0x287e4b302549 <JSArray[4096]> ;  stack parameter (input #2)
    -------------------------
    0x7ffc4f260188: [top + 112] <- 0x0ee3f628e458 ;  caller's pc
    0x7ffc4f260180: [top + 104] <- 0x7ffc4f2601d8 ;  caller's fp
    0x7ffc4f260178: [top +  96] <- 0x3b09f1c84a21 <FunctionContext[15]> ;  context
 (input #0)
    0x7ffc4f260170: [top +  88] <- 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> ;  function
 (input #0)
    0x7ffc4f260168: [top +  80] <- 0x3e79bd328149 <BytecodeArray[108]> ;  bytecode array
    0x7ffc4f260160: [top +  72] <- 0x003d00000000 <Smi 61> ;  bytecode offset
    -------------------------
    0x7ffc4f260158: [top +  64] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #4)
    0x7ffc4f260150: [top +  56] <- 0x000000000000 <Smi 0> ;  stack parameter (input #5)
    0x7ffc4f260148: [top +  48] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #6)
    0x7ffc4f260140: [top +  40] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #7)
    0x7ffc4f260138: [top +  32] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #8)
    0x7ffc4f260130: [top +  24] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #9)
    0x7ffc4f260128: [top +  16] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #10)
    0x7ffc4f260120: [top +   8] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  stack parameter (input #11)
    0x7ffc4f260118: [top +   0] <- 0x06076fd02f39 <Odd Oddball: optimized_out> ;  accumulator (input #0)
[deoptimizing (eager): end 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> @2 => node=4, pc=0x0ee3f628ea00, caller sp=0x7ffc4f2601a0, took 0.589 ms]
[marking 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 17/17 (100%), generic ICs: 0/17 (0%)]
[compiling method 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> using TurboFan OSR]
[optimizing 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> - took 0.197, 0.962, 0.016 ms]
| 4096 x 11 | 167 | 200 |
[marking 0x0f277c802f11 <JSFunction createArray (sfi = 0x29f8b5e6cd71)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 7/7 (100%), generic ICs: 0/7 (0%)]
[compiling method 0x0f277c802f11 <JSFunction createArray (sfi = 0x29f8b5e6cd71)> using TurboFan]
[marking 0x0f277c803011 <JSFunction createArray (sfi = 0x29f8b5e704f9)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[optimizing 0x0f277c802f11 <JSFunction createArray (sfi = 0x29f8b5e6cd71)> - took 0.117, 0.788, 0.022 ms]
[completed optimizing 0x0f277c802f11 <JSFunction createArray (sfi = 0x29f8b5e6cd71)>]
[marking 0x0f277c810541 <JSFunction createPaddedFFt (sfi = 0x29f8b5e705a9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 17/17 (100%), generic ICs: 0/17 (0%)]
[compiling method 0x0f277c810541 <JSFunction createPaddedFFt (sfi = 0x29f8b5e705a9)> using TurboFan OSR]
[optimizing 0x0f277c810541 <JSFunction createPaddedFFt (sfi = 0x29f8b5e705a9)> - took 0.633, 2.397, 0.038 ms]
[compiling method 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> using TurboFan]
[optimizing 0x0f277c80bea9 <JSFunction _convolutionBorder0 (sfi = 0x29f8b5e706b1)> - took 0.365, 1.319, 0.055 ms]
| 4096 x 17 | 500 | 500 |
[compiling method 0x0f277c803011 <JSFunction createArray (sfi = 0x29f8b5e704f9)> using TurboFan]
[optimizing 0x0f277c803011 <JSFunction createArray (sfi = 0x29f8b5e704f9)> - took 0.166, 0.700, 0.044 ms]
[completed optimizing 0x0f277c803011 <JSFunction createArray (sfi = 0x29f8b5e704f9)>]
[compiling method 0x0f277c810541 <JSFunction createPaddedFFt (sfi = 0x29f8b5e705a9)> using TurboFan]
[optimizing 0x0f277c810541 <JSFunction createPaddedFFt (sfi = 0x29f8b5e705a9)> - took 0.461, 2.708, 0.062 ms]
| 4096 x 33 | 500 | Infinity |
| 4096 x 65 | 500 | Infinity |
| 4096 x 129 | Infinity | 500 |
| 4096 x 513 | 500 | 200 |
| 16384 x 5 | 200 | 1000 |
| 16384 x 11 | 250 | 1000 |
| 16384 x 17 | 250 | 1000 |
| 16384 x 33 | 200 | 1000 |
| 16384 x 65 | 250 | 500 |
| 16384 x 129 | 250 | 200 |
| 16384 x 513 | 250 | 48 |
[marking dependent code 0x0ee3f6371c21 (opt #10) for deoptimization, reason: weak objects]
[marking dependent code 0x0ee3f6370041 (opt #7) for deoptimization, reason: weak objects]
[marking dependent code 0x0ee3f6374b21 (opt #16) for deoptimization, reason: weak objects]
[marking dependent code 0x0ee3f63784a1 (opt #23) for deoptimization, reason: weak objects]
[marking dependent code 0x0ee3f6373ae1 (opt #14) for deoptimization, reason: weak objects]
[deoptimize marked code in all contexts]
